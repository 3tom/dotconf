# Use Ctrl+a as a prefix
unbind C-b
set -g prefix C-a

set -g history-limit 100000

# in ms
set -sg escape-time 1

# Ctrl+a Ctrl+a to forward Ctrl+a
bind C-a send-prefix

# Change window name
unbind ,
bind A command-prompt -I "#W" "rename-window '%%'"

# Use 256 colors by default
set -g default-terminal "screen-256color"

# Mouse
if-shell "[[ `tmux -V | cut -d' ' -f2` -lt 2.1 ]]" 'set -g mouse-select-pane on'
if-shell "[[ `tmux -V | cut -d' ' -f2` -lt 2.1 ]]" 'set -g mouse-resize-pane on'
if-shell "[[ `tmux -V | cut -d' ' -f2` -lt 2.1 ]]" 'set -g mouse-select-window on'
if-shell "[[ `tmux -V | cut -d' ' -f2` -gt 2.1 ]]" 'set -g mouse on'
#setw -g mode-mouse on


# Window spliting
unbind '"'
unbind %
bind | split-window -h
bind - split-window -v

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

set -g status-fg white
set -g status-bg black

# Normal window color
setw -g window-status-fg white
setw -g window-status-bg default
setw -g window-status-attr dim

# Active window color
setw -g window-status-current-fg white
setw -g window-status-current-bg cyan
setw -g window-status-current-attr bright

# window list
unbind w
bind '"' choose-window

# Copy mode
unbind [
bind Escape copy-mode

#unbind p
#bind p paste-buffer
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection
setw -g mode-keys vi

# last window
bind-key C-a last-window

# for tmux inside tmux
bind-key a send-prefix

# only resize window if someone is looking at it
setw -g aggressive-resize on

set-option -g set-titles off

set-option -g allow-rename off

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind C-l send-keys 'C-l'

# Make ctrl-left ctrl-right work
set-window-option -g xterm-keys on
